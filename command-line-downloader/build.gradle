plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'uk.ac.ebi.ena'
version = System.getenv("APP_VERSION")
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'commons-net:commons-net:3.8.0'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'org.json:json:20090211'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation group: 'me.tongfei', name: 'progressbar', version: '0.9.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation 'com.univocity:univocity-parsers:2.8.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'junit:junit:4.12'
    compile group: 'org.mockito', name: 'mockito-core', version: '2.24.0'
    testCompile('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

test {
    useJUnitPlatform()
}

tasks.register('packageDistribution', Zip) {
    archiveFileName = "ena-file-downloader-" + project.version + ".zip"
    destinationDirectory = layout.buildDirectory.dir('dist')

    from(layout.buildDirectory.dir("libs")) {
        include "ena-file-downloader.jar"
    }

    from(layout.projectDirectory.dir("distribution")) {
        include "README.txt"
        include "run.*"
    }
}

task replaceVersionInReadme  {
    ant.replaceregexp(match:'version:[^->]*', replace:'version:' + version  , byline:true) {
        fileset(dir: 'distribution', includes: 'README.txt')
    }
}

tasks.build.dependsOn(replaceVersionInReadme)


//compileJava.dependsOn clean
bootJar.finalizedBy packageDistribution
